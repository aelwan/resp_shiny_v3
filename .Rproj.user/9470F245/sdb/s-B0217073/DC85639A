{
    "collab_server" : "",
    "contents" : "library(raster)\n\n#function to read in SDZ rasters\n# this is temporaty for testing\nfolder <- \"data/raster/\"\n\nSDZ_imp <- function(zone_i,time_i,perc){\n    #load SDZ raster\n  fnameL1 <- paste(\"RF\",zone_i,time_i,1,perc,sep = \"_\")\n  fnameL1 <- paste(folder,fnameL1,\".tif\",sep = \"\")\n  fnameL2 <- paste(\"RF\",zone_i,time_i,2,perc,sep = \"_\")\n  fnameL2 <- paste(folder,fnameL2,\".tif\",sep = \"\")\n  RF1 <- raster(fnameL1)\n  RF2 <- raster(fnameL2)\n  RF_comb <- list(RF1,RF2)\n  return(RF_comb)\n}\n\n#function to  \ntot_eff2 <- function(wells_list,zone,time,perc){\n  RF_comb <- SDZ_imp(zone,time,perc)\n  #output\n  RF_L1 <- RF_comb[[1]]\n  RF_L2 <- RF_comb[[2]]\n  \n \n wells_sp1 <- wells_list[[1]]\n wells_sp2 <-  wells_list[[2]]\n wells1_1 <-   wells_list[[3]] \n wells1_2 <-   wells_list[[4]] \n if(NROW(wells1_1) >=1) {\n   ef1 <- raster::extract(RF_L1,wells_sp1,method =\"bilinear\",fun = sum) \n   df1 <- data.frame(SD = ef1) %>% \n     dplyr::slice(1:(n()-1)) %>% \n     bind_cols(wells1_1) \n }\n if(NROW(wells1_2) >=1) {\n   ef2 <- raster::extract(RF_L2,wells_sp2,method =\"bilinear\",fun = sum) \n   df2 <- data.frame(SD =  ef2) %>%\n     dplyr::slice(1:(n()-1)) %>% \n     bind_cols(wells1_2)\n }\n if(NROW(wells1_1) >=1 & NROW(wells1_2) >=1){\n   tot_effect <- bind_rows(df1,df2)\n }else if(NROW(wells1_1) == 0){\n    tot_effect <- df2\n    }else if(NROW(wells1_2) == 0){tot_effect <- df1}\n tot_effect <- tot_effect %>% \n    filter(is.na(SD) != T) %>% \n    mutate(SD_tot = Q*SD)\n  \n  return(tot_effect)\n}\n\nsd_extract <- function(wells1,zone_i,time_i,layer){\n  \n  SD50R<- SDZ_imp(zone_i,time_i,\"Q50\")[[layer]]\n  SD10R <- SDZ_imp(zone_i,time_i,\"Q10\")[[layer]]\n  SD90R <- SDZ_imp(zone_i,time_i,\"Q90\")[[layer]]\n  SD50 <- raster::extract(SD50R,wells1,method = \"bilinear\",fun = mean)\n  SD10 <- raster::extract(SD10R,wells1,method = \"bilinear\",fun = mean)\n  SD90 <- raster::extract(SD90R,wells1,method = \"bilinear\",fun = mean)\n  effect <- c(SD50,SD10,SD90)\n  effect\n  \n  \n  \n}\n\n#summarise to one value\ntot_eff2_sum <- function(df){\n  tot_eff2_sum <- df %>% \n    group_by() %>% \n    summarise(SD_tot= sum(SD_tot,na.rm = T))\n  return(unlist(tot_eff2_sum))\n}\n\n#SDZ_imp(\"ALLZN\",\"49\",\"Q50\")\n\n\n#function to convert wells data frame to rasters per layer\n# pump2rast <- function(wells){\n# #generate well from input\n# \n# zero_row <- wells %>% \n#     slice(0) %>% \n#     add_row() %>% \n#     mutate(Q=0, \n#            bore = \"dummy\",\n#            x=0,\n#            y=0)  # dummy row to be added to avoid empty matrix  \n#   \n#   \n# \n# #wells need to be divided to L1 and L2 because sdz are for layers 1 and 2\n# wells_L1 <- wells %>% \n#   filter(L==1) %>%\n#   bind_rows(zero_row) #dummy row added just in case its's empty\n# \n# wells_L2 <- wells %>% \n#   filter(L==2)%>%\n#   bind_rows(zero_row) #dummy row added just in case its's empty\n# \n# #create emplty raster\n# raster_blnak <- raster(nrows = 58,ncol = 98, xmn = 1892760, xmx = 1941760 , ymn =  5594200, ymx  = 5623200)\n# \n# #rasterrise pumping data set\n# coordinates(wells_L1) <- ~ x + y\n# coordinates(wells_L2) <- ~ x + y\n# raster_pumping_L1 <- rasterize(wells_L1,raster_blnak,wells_L1$Q,fun=sum)\n# raster_pumping_L2 <- rasterize(wells_L2,raster_blnak,wells_L2$Q,fun=sum)\n# raster_pumping_comb <- list(raster_pumping_L1,raster_pumping_L2)\n# return(raster_pumping_comb)\n# }\n\n###### this sction is for testing\n# RF1 <- raster(paste(folder,\"RF_ALLZN_49_1_Q50.tif\",sep=\"\"))\n# RF2 <- raster(paste(folder,\"RF_ALLZN_49_2_Q50.tif\",sep=\"\"))\n# wells <- read_csv(\"data/wells/wells.csv\") %>%\n#   select(E:L)\n#   colnames(wells) <- c(\"x\",\"y\",\"Q\",\"L\")\n# \n# \n#     #create a point for the selected location\n#     #convert wells to lat long as set as spatial object for mapping in leaflet\n#     wells1_1 <- wells %>% \n#       filter(L==1) %>% \n#       st_as_sf(coords = c(\"x\", \"y\"),crs = 2193)\n#     \n#     #st_write(wells1_1,\"wells1_1.shp\")\n#     wells_sp1 <- as(wells1_1, 'Spatial')\n#     \n#     wells1_2 <- wells %>% \n#       filter(L==2) %>% \n#       st_as_sf(coords = c(\"x\", \"y\"),crs = 2193)\n#     wells_sp2 <- as(wells1_2, 'Spatial')\n# \n#   plot(wells_sp1)\n#   \n#   ef1 <- raster::extract(RF1,wells_sp1,method =\"bilinear\",fun = sum)\n#   df1 <- data.frame(effect = ef1) %>% \n#     bind_cols(wells1_1) %>% \n#     mutate(L=1)\n####### \n\n#test this\n#test <- tot_eff2_sum(tot_eff2(wells,\"ALLZN\",\"49\",\"Q50\"))\n\n\n########\n# #inner function to calclulate the total effect\n# tot_eff <- function(raster_pumping_L1,\n#                     raster_pumping_L2,\n#                     RF_L1,\n#                     RF_L2){\n#   RF_tot_effect_L1 <- raster_pumping_L1 *RF_L1/100/3600/24*(-1000)\n#   RF_tot_effect_L2 <- raster_pumping_L2 *RF_L2/100/3600/24*(-1000)\n#   tot_effect_L1 <- cellStats(RF_tot_effect_L1, sum)\n#   tot_effect_L2 <- cellStats(RF_tot_effect_L2, sum)\n#   tot_effect <- tot_effect_L1 + tot_effect_L2\n#   return(tot_effect)\n# }\n\n\n\n\n#outer function to calclulate pumping effect \n# tot_eff_calc <- function(zone,time,raster_pumping_comb){\n#   \n#   RF_comb <- SDZ_imp(zone,time)\n#   #output\n#   RF_L1 <- RF_comb[[1]]\n#   RF_L2 <- RF_comb[[2]]\n#   \n#   #####\n#   #function to calc combined effect \n#   tot_effect <- tot_eff(raster_pumping_comb[[1]],\n#                         raster_pumping_comb[[2]],\n#                         RF_L1,\n#                         RF_L2)\n#   res1 <- data.frame(zone = zone,\n#                               time = time,\n#                               tot_effect=tot_effect,\n#                               stringsAsFactors = F)\n# \n#   # #\n#   # RFL <- if(input$Layer==1){RF_L1}else{RF_L2}\n#   # crs(RFL) <- nztm\n#   # res1[z,4] <- extract(RFL,wells1()) #this extracts %stream depletion from raster\n#   #\n#   return(res1)\n#   \n# }\n",
    "created" : 1549513822367.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "502724121",
    "id" : "DC85639A",
    "lastKnownWriteTime" : 1525297358,
    "last_content_update" : 1525297358,
    "path" : "C:/PAWEL/R/resp_shiny_v3/proc.R",
    "project_path" : "proc.R",
    "properties" : {
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}