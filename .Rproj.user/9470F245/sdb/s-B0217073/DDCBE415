{
    "collab_server" : "",
    "contents" : "\n\nui <- fluidPage( #column for inputs\n  titlePanel(\"Stream depletion calculator\"),\n  fluidRow(\n    column(2,\n           downloadButton('downloadReport'),\n           radioButtons(inputId = \"pump_in_type\",\n                        label = \"pumping input type\",\n                        choices = c(\"single point\",\"upload csv\",\"historical data\"),\n                        selected = \"single point\"),\n           conditionalPanel(\"input.pump_in_type == 'historical data'\",\n                            checkboxGroupInput(\"abstr_type\",\n                                               \"abstraction type\",\n                                               choices = list(\"Irrigation\" = \"irr\",\n                                                              \"Public Water Supply\" = \"PWS\",\n                                                              \"Industrial\"= \"IND\"),\n                                               selected = \"PWS\"),\n                            radioButtons(inputId = \"period_type\",\n                                         label = \"select averaging period\",\n                                         choices = c(\"dry summer 2012-2013\",\"date range\"),\n                                         selected = \"dry summer 2012-2013\"),\n                            conditionalPanel(\"input.period_type == 'date range'\",\n                                             dateRangeInput(inputId = \"date_range_hist\",\n                                                            label = \"enter date range between 1/7/1980 and 1/6/2015\",\n                                                            start = \"2012-11-01\",\n                                                            end = \"2013-03-01\",\n                                                            min = \"1980-07-01\",\n                                                            max = \"2015-06-01\",\n                                                            startview = \"decade\"))),\n           conditionalPanel(\"input.pump_in_type == 'single point'\",\n                            numericInput(inputId = \"E\",\n                                         label = \"Easting:\",\n                                         value = 1930000,\n                                         step = 500),\n                            \n                            numericInput(inputId = \"N\",\n                                         label = \"Northing:\",\n                                         value = 5605000,\n                                         step = 500),\n                            \n                            numericInput(inputId = \"Q\",\n                                         label = \"Pumping rate L/s:\",\n                                         value = 50)\n           ),\n           \n           conditionalPanel(\"input.pump_in_type == 'upload csv'\",\n                            fileInput(\"file1\", \"Choose CSV File\",\n                                      accept = c(\n                                        \"text/csv\",\n                                        \"text/comma-separated-values,text/plain\",\n                                        \".csv\")\n                            )\n                            \n           ),\n           radioButtons(inputId = \"zone\",\n                        label = \"select stream\",\n                        choiceNames = rivers$descr,\n                        choiceValues = rivers$river,\n                        selected = \"ALLZN\"\n           ),\n           radioButtons(inputId = \"time\",\n                        label = \"select time (days)\",\n                        choices = c(\"7\",\"30\",\"60\",\"90\",\"150\"),\n                        selected = \"150\"),\n           radioButtons(inputId = \"Layer\",\n                        label = \"select Layer\",\n                        choices = c(\"1\",\"2\"),\n                        selected = \"1\")\n    ),\n    column(10, #column for results\n           \n           fluidRow( #row for text results\n             fixedRow(\n               \n               \n               column(7,\n                      h3(textOutput(\"tot_effect_out_label\"))\n               ),\n               column(3,\n                      strong(h1(textOutput(\"tot_effect_out\")))\n               )\n               \n               \n             ),\n             fixedRow(conditionalPanel(\"input.pump_in_type == 'single point'\",\n                                       column(7,\n                                              h3(textOutput(\"SDZ_out_label\"))\n                                       ),\n                                       column(3,\n                                              strong(h1(textOutput(\"SDZ_out\")))#,\n                                              #strong(h1(textOutput(\"test1\")))\n                                       )\n             ))\n             \n           ),\n           fluidRow( #row for map\n             tabsetPanel(type = \"tabs\",\n                         tabPanel(\"Map\", \n                                  leafletOutput(\"map\"),\n                                  downloadButton(\"downloadData_bore\", \"Download Data\"),\n                                  dataTableOutput(\"wells_tab\")),\n                         tabPanel(\"bar chart\", \n                                  plotlyOutput(\"bar_chart\"),\n                                  downloadButton(\"downloadData_river\", \"Download Data\"),\n                                  dataTableOutput(\"zones_tab\")),\n                         tabPanel(\"line chart\", \n                                  plotlyOutput(\"line_chart\"),\n                                  downloadButton(\"downloadData_time\", \"Download Data\"),\n                                  dataTableOutput(\"times_tab\")\n                         )\n                         \n                         \n             )\n           )\n    )\n  )\n)",
    "created" : 1549509857499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "589010588",
    "id" : "DDCBE415",
    "lastKnownWriteTime" : 1549511591,
    "last_content_update" : 1549511591097,
    "path" : "C:/PAWEL/R/resp_shiny_v3/ui.R",
    "project_path" : "ui.R",
    "properties" : {
        "marks" : "<:100,61\n>:100,61",
        "source_window_id" : "wdufkq91i69he",
        "tempName" : "Untitled9"
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}